{"version":3,"sources":["reducers/todos.js","actions/index.js","reducers/visibilityFilter.js","reducers/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","api.js","containers/AddToDo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","index.js"],"names":["todos","state","action","type","id","text","completed","map","todo","nextTodoId","addTodo","VisibilityFilters","visibilityFilter","filter","combineReducers","Link","active","children","onClick","disabled","style","marginLeft","connect","ownProps","dispatch","Footer","FilterLink","Endpoints","Template","DemoAPI","stage","input","axios","get","then","a","response","data","body","statusCode","resBody","resArray","i","hasMore","length","catch","error","console","log","onSubmit","e","preventDefault","value","trim","ref","node","Todo","textDecoration","TodoList","toggleTodo","key","getVisibleTodos","t","Error","App","marginTop","VisibleTodoList","store","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.338e1511.chunk.js","sourcesContent":["const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ]\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      )\n    default:\n      return state\n  }\n}\n\nexport default todos","let nextTodoId = 0\nexport const addTodo = text => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n})","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => (\n  <button\n    onClick={onClick}\n    disabled={active}\n    style={{\n      marginLeft: '4px'\n    }}\n  >\n    {children}\n  </button>\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link)","import React from 'react'\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\n\nconst Footer = () => (\n  <div>\n    <span>Show: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n  </div>\n)\n\nexport default Footer","const Dev = \"https://ffo06tt53a.execute-api.us-east-1.amazonaws.com/dev/\"\n\nlet stage = Dev\n\nconst Endpoints = {\n    Template: {\n        DemoAPI : stage + \"hello/\"\n    }\n}\n\nexport default Endpoints","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions'\nimport axios from 'axios';\nimport Endpoints from '../api';\n\nconst AddTodo = ({ dispatch }) => {\n  let input\n  \n  \n  axios.get(Endpoints.Template.DemoAPI)\n        .then(async(response)=>{\n            if(response.data.body === \"No data found\")\n            {\n                return null;\n            }\n            else\n            {\n                if(response.data.statusCode === 200)\n                {\n                    let resBody = await (response.data.body);\n                    return resBody;\n                }\n                else\n                {\n                    return null\n                }\n            }\n        })\n        .then((resBody) => {\n            if(resBody)\n            {\n                let dataSource = [], resArray = resBody, hasMore = resBody.hasMore;\n                for(let i=0; i<resArray.length; i++)\n                {\n                  dispatch(addTodo(resArray[i]));\n                }\n            }\n            // else\n            // {\n            //     this.setState({ loading: false, hasMore: false });   \n            // }\n        })\n        .catch((error)=>{\n            console.log(\"Error\",error);\n            // this.setState({ loading: false, hasMore: false });\n\n        });\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addTodo(input.value))\n          input.value = ''\n        }}\n      >\n        <input ref={node => (input = node)} />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  )\n}\n\nexport default connect()(AddTodo)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? 'line-through' : 'none'\n    }}\n  >\n    {text}\n  </li>\n)\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Todo","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, toggleTodo }) => (\n  <ul>\n    {todos.map(todo => (\n      <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\n    ))}\n  </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList","import { connect } from 'react-redux'\nimport { toggleTodo } from '../actions'\nimport TodoList from '../components/TodoList'\nimport { VisibilityFilters } from '../actions'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)","import React from 'react'\nimport Footer from './Footer'\nimport AddTodo from '../containers/AddToDo'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nconst App = () => (\n  <div style={{marginTop:'20px', marginLeft:'40%'}}>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </div>\n)\n\nexport default App","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport App from './components/App'\n\nconst store = createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}